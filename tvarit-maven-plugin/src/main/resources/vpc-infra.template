{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "tvaritRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            },
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/"
      }
    },
    "tvaritInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "tvaritRole"
          }
        ]
      }
    },
    "tvaritRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "projectName"
              },
              "-policy"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "Stmt1457233272000",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:ListBucket",
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "bucketName"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Sid": "Stmt1457233341000",
              "Effect": "Allow",
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:ListStackResources",
                "cloudformation:SignalResource",
                "cloudformation:UpdateStack",
                "cloudformation:ValidateTemplate"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Sid": "Stmt1457233476000",
              "Effect": "Allow",
              "Action": [
                "ec2:AllocateAddress",
                "ec2:AssignPrivateIpAddresses",
                "ec2:AssociateAddress",
                "ec2:AttachVolume",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInstances",
                "ec2:DescribeTags",
                "ec2:RunInstances",
                "ec2:StartInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Sid": "Stmt1457233833000",
              "Effect": "Allow",
              "Action": [
                "autoscaling:AttachInstances",
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:CreateOrUpdateTags",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeLaunchConfigurations",
                "autoscaling:DetachInstances",
                "autoscaling:EnterStandby",
                "autoscaling:ExitStandby",
                "autoscaling:PutScalingPolicy",
                "autoscaling:ResumeProcesses",
                "autoscaling:SetDesiredCapacity",
                "autoscaling:SuspendProcesses",
                "autoscaling:TerminateInstanceInAutoScalingGroup"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DeleteNetworkInterface"
              ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "tvaritRole"
          }
        ]
      }
    },
    "domainNameHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "domainName"
              }
            ]
          ]
        },
        "HostedZoneConfig": {
          "Comment": "HostedZone created by Tvarit"
        }
      }
    },
    "tvaritVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-vpc"
                ]
              ]
            }
          },
          {
            "Key": "tvarit:vpc",
            "Value": ""
          }
        ]
      }
    },
    "dbASubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.10.0/24",
        "AvailabilityZone": "us-east-1c",
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-db-a"
                ]
              ]
            }
          },
          {
            "Key": "tvarit:db",
            "Value": ""
          }
        ]
      }
    },
    "pubAppSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1a",
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-pub-a"
                ]
              ]
            }
          },
          {
            "Key": "tvarit:appSubnet",
            "Value": ""
          }
        ],
        "MapPublicIpOnLaunch": true
      }
    },
    "dbSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.20.0/24",
        "AvailabilityZone": "us-east-1d",
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "Tags": [
          {
            "Key": "tvarit:db",
            "Value": ""
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-db-b"
                ]
              ]
            }
          }
        ]
      }
    },
    "pubAppSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1e",
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "Tags": [
          {
            "Key": "tvarit:appSubnet",
            "Value": ""
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-pub-b"
                ]
              ]
            }
          }
        ],
        "MapPublicIpOnLaunch": true
      }
    },
    "publicSubnetIg": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-ig"
                ]
              ]
            }
          }
        ]
      }
    },
    "tvaritVpcDhcpOpts": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "defaultTvaritVpcAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "tvaritVpc"
        }
      }
    },
    "publicSubnetRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "projectName"
                  },
                  "-pub-internet-rt"
                ]
              ]
            }
          }
        ]
      }
    },
    "tvaritVpcDefaultRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "tvaritVpc"
        }
      }
    },
    "tvaritS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private",
        "VersioningConfiguration": {
          "Status": "Suspended"
        },
        "BucketName": {
          "Ref": "bucketName"
        },
        "Tags": [
          {
            "Key": "tvarit:bucket",
            "Value": ""
          }
        ]
      }
    },
    "sgDefault": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "default VPC security group",
        "VpcId": {
          "Ref": "tvaritVpc"
        }
      }
    },
    "defaultAclDefaultRule1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        }
      }
    },
    "defaultAclDefaultRule2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        }
      }
    },
    "defaultAclToPubSubnetBAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        },
        "SubnetId": {
          "Ref": "pubAppSubnetB"
        }
      }
    },
    "defaultAclToDbSubnetBAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        },
        "SubnetId": {
          "Ref": "dbSubnetB"
        }
      }
    },
    "defaultAclToSubnetAAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        },
        "SubnetId": {
          "Ref": "dbASubnet"
        }
      }
    },
    "defaultAclToPubSubnetAAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "defaultTvaritVpcAcl"
        },
        "SubnetId": {
          "Ref": "pubAppSubnetA"
        }
      }
    },
    "pubSubnetInternetGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "InternetGatewayId": {
          "Ref": "publicSubnetIg"
        }
      }
    },
    "pubAppSubnetAToLocalRouteTable": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "publicSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "pubAppSubnetA"
        }
      }
    },
    "pubAppSubnetBToLocalRouteTable": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "publicSubnetRouteTable"
        },
        "SubnetId": {
          "Ref": "pubAppSubnetB"
        }
      }
    },
    "pubAppSubnetAToInternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "publicSubnetRouteTable"
        },
        "GatewayId": {
          "Ref": "publicSubnetIg"
        }
      },
      "DependsOn": "pubSubnetInternetGateway"
    },
    "S3Endpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "DependsOn": [
        "tvaritS3Bucket"
      ],
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "publicSubnetRouteTable"
          }
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "tvaritVpc"
        }
      }
    },
    "dhcpAssociation": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "tvaritVpc"
        },
        "DhcpOptionsId": {
          "Ref": "tvaritVpcDhcpOpts"
        }
      }
    },
    "defaultSgInRule": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDefault"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "sgDefault"
        },
        "SourceSecurityGroupOwnerId": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "defaultSgOutRule": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "sgDefault"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Parameters": {
    "projectName": {
      "Type": "String",
      "Description": "Enter a name for your project. This will be used as part of resource names and tags.",
      "AllowedPattern": "[A-Za-z]*",
      "MinLength": "1"
    },
    "domainName": {
      "Type": "String",
      "Description": "Enter a name for the domain name for which a new hosted zone will be created.",
      "MinLength": "1"
    },
    "bucketName": {
      "Type": "String",
      "Description": "Enter a name for a new S3 bucket where that will be created for deployment via tvarit.",
      "MinLength": "1"
    }
  },
  "Description": ""
}